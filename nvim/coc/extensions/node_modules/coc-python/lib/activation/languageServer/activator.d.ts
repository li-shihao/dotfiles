import { IWorkspaceService } from '../../common/application/types';
import { IFileSystem } from '../../common/platform/types';
import { IConfigurationService, Resource, IExtensionContext } from '../../common/types';
import { ILanguageServerActivator, ILanguageServerDownloader, ILanguageServerFolderService, ILanguageServerManager } from '../types';
/**
 * Starts the language server managers per workspaces (currently one for first workspace).
 *
 * @export
 * @class LanguageServerExtensionActivator
 * @implements {ILanguageServerActivator}
 */
export declare class LanguageServerExtensionActivator implements ILanguageServerActivator {
    private readonly manager;
    private readonly workspace;
    private readonly fs;
    private readonly lsDownloader;
    private readonly languageServerFolderService;
    private readonly configurationService;
    private readonly context;
    constructor(manager: ILanguageServerManager, workspace: IWorkspaceService, fs: IFileSystem, lsDownloader: ILanguageServerDownloader, languageServerFolderService: ILanguageServerFolderService, configurationService: IConfigurationService, context: IExtensionContext);
    activate(resource: Resource): Promise<void>;
    dispose(): void;
    protected ensureLanguageServerIsAvailable(resource: Resource): Promise<void>;
}
