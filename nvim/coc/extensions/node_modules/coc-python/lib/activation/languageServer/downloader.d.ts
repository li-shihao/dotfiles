import { IApplicationShell } from '../../common/application/types';
import { IFileSystem } from '../../common/platform/types';
import { IOutputChannel } from '../../common/types';
import { IHttpClient, ILanguageServerDownloader, ILanguageServerFolderService, IPlatformData } from '../types';
export declare class LanguageServerDownloader implements ILanguageServerDownloader {
    private readonly platformData;
    private readonly output;
    private readonly httpClient;
    private readonly lsFolderService;
    private readonly appShell;
    private readonly fs;
    constructor(platformData: IPlatformData, output: IOutputChannel, httpClient: IHttpClient, lsFolderService: ILanguageServerFolderService, appShell: IApplicationShell, fs: IFileSystem);
    getDownloadInfo(): Promise<import("../../common/nuget/types").NugetPackage>;
    downloadLanguageServer(destinationFolder: string): Promise<void>;
    protected showMessageAndOptionallyShowOutput(message: string): Promise<void>;
    protected downloadFile(uri: string, title: string): Promise<string>;
    protected unpackArchive(destinationFolder: string, tempFilePath: string): Promise<void>;
}
