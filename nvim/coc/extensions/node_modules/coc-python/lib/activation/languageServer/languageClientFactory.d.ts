/// <reference types="node" />
import { LanguageClient, LanguageClientOptions } from 'coc.nvim';
import { IConfigurationService, IExtensionContext, Resource } from '../../common/types';
import { IEnvironmentVariablesProvider } from '../../common/variables/types';
import { IEnvironmentActivationService } from '../../interpreter/activation/types';
import { ILanguageClientFactory, ILanguageServerFolderService, IPlatformData } from '../types';
export declare class BaseLanguageClientFactory implements ILanguageClientFactory {
    private readonly downloadedFactory;
    private readonly simpleFactory;
    private readonly configurationService;
    private readonly envVarsProvider;
    private readonly environmentActivationService;
    constructor(downloadedFactory: ILanguageClientFactory, simpleFactory: ILanguageClientFactory, configurationService: IConfigurationService, envVarsProvider: IEnvironmentVariablesProvider, environmentActivationService: IEnvironmentActivationService);
    createLanguageClient(resource: Resource, clientOptions: LanguageClientOptions): Promise<LanguageClient>;
    private getEnvVars;
}
/**
 * Creates a langauge client for use by users of the extension.
 *
 * @export
 * @class DownloadedLanguageClientFactory
 * @implements {ILanguageClientFactory}
 */
export declare class DownloadedLanguageClientFactory implements ILanguageClientFactory {
    private readonly platformData;
    private readonly languageServerFolderService;
    private readonly context;
    constructor(platformData: IPlatformData, languageServerFolderService: ILanguageServerFolderService, context: IExtensionContext);
    createLanguageClient(_resource: Resource, clientOptions: LanguageClientOptions, env?: NodeJS.ProcessEnv): Promise<LanguageClient>;
}
/**
 * Creates a language client factory primarily used for LS development purposes.
 *
 * @export
 * @class SimpleLanguageClientFactory
 * @implements {ILanguageClientFactory}
 */
export declare class SimpleLanguageClientFactory implements ILanguageClientFactory {
    private readonly platformData;
    private readonly languageServerFolderService;
    private readonly context;
    constructor(platformData: IPlatformData, languageServerFolderService: ILanguageServerFolderService, context: IExtensionContext);
    createLanguageClient(_resource: Resource, clientOptions: LanguageClientOptions, env?: NodeJS.ProcessEnv): Promise<LanguageClient>;
}
