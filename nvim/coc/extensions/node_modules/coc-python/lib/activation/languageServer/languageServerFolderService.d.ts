import * as semver from 'semver';
import { NugetPackage } from '../../common/nuget/types';
import { IExtensionContext } from '../../common/types';
import { IServiceContainer } from '../../ioc/types';
import { FolderVersionPair, ILanguageServerFolderService } from '../types';
export declare class LanguageServerFolderService implements ILanguageServerFolderService {
    private readonly serviceContainer;
    private readonly context;
    constructor(serviceContainer: IServiceContainer, context: IExtensionContext);
    getLanguageServerFolderName(): Promise<string>;
    getLatestLanguageServerVersion(): Promise<NugetPackage | undefined>;
    shouldLookForNewLanguageServer(currentFolder?: FolderVersionPair): Promise<boolean>;
    getCurrentLanguageServerDirectory(): Promise<FolderVersionPair | undefined>;
    getExistingLanguageServerDirectories(): Promise<FolderVersionPair[]>;
    getFolderVersion(dirName: string): semver.SemVer;
    private getDownloadChannel;
}
