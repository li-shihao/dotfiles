import { Resource } from '../../../common/types';
import { IServiceContainer } from '../../../ioc/types';
import { BaseDiagnostic, BaseDiagnosticsService } from '../base';
import { DiagnosticCodes } from '../constants';
import { IDiagnostic } from '../types';
export declare class InvalidPythonInterpreterDiagnostic extends BaseDiagnostic {
    constructor(code: DiagnosticCodes.NoPythonInterpretersDiagnostic | DiagnosticCodes.NoCurrentlySelectedPythonInterpreterDiagnostic, resource: Resource);
}
export declare const InvalidPythonInterpreterServiceId = "InvalidPythonInterpreterServiceId";
export declare class InvalidPythonInterpreterService extends BaseDiagnosticsService {
    constructor(serviceContainer: IServiceContainer);
    diagnose(resource: Resource): Promise<IDiagnostic[]>;
    protected onHandle(diagnostics: IDiagnostic[]): Promise<void>;
    private getCommandPrompts;
}
