import { IWorkspaceService } from './types';
import { WorkspaceFolder, Event, CancellationToken } from 'vscode-languageserver-protocol';
import { ConfigurationChangeEvent, FileSystemWatcher, WorkspaceConfiguration } from 'coc.nvim';
import Uri from 'vscode-uri';
import { Resource } from '../types';
export declare class WorkspaceService implements IWorkspaceService {
    readonly onDidChangeConfiguration: Event<ConfigurationChangeEvent>;
    readonly rootPath: string | undefined;
    readonly workspaceFolders: WorkspaceFolder[] | undefined;
    getConfiguration(section?: string, resource?: Uri): WorkspaceConfiguration;
    createFileSystemWatcher(globPattern: string, _ignoreCreateEvents?: boolean, ignoreChangeEvents?: boolean, ignoreDeleteEvents?: boolean): FileSystemWatcher;
    findFiles(include: string, exclude?: string, maxResults?: number, _token?: CancellationToken): Promise<Uri[]>;
    getWorkspaceFolder(uri: Resource): WorkspaceFolder | undefined;
    readonly hasWorkspaceFolders: boolean;
    getWorkspaceFolderIdentifier(resource: Resource, defaultValue?: string): string;
}
