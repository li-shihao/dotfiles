import { CancellationToken } from 'vscode-jsonrpc';
/**
 * Error type thrown when canceling.
 */
export declare class CancellationError extends Error {
    constructor();
}
export declare namespace Cancellation {
    /**
     * Races a promise and cancellation. Promise can take a cancellation token too in order to listen to cancellation.
     * @param work function returning a promise to race
     * @param token token used for cancellation
     */
    function race<T>(work: (token?: CancellationToken) => Promise<T>, token?: CancellationToken): Promise<T>;
    /**
     * isCanceled returns a boolean indicating if the cancel token has been canceled.
     * @param cancelToken
     */
    function isCanceled(cancelToken?: CancellationToken): boolean;
    /**
     * throws a CancellationError if the token is canceled.
     * @param cancelToken
     */
    function throwIfCanceled(cancelToken?: CancellationToken): void;
}
