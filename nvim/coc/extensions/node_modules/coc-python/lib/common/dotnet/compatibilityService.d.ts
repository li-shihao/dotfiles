import { IPlatformService } from '../platform/types';
import { IDotNetCompatibilityService, IOSDotNetCompatibilityService } from './types';
/**
 * .NET Core 2.1 OS Requirements
 * https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1-supported-os.md
 * We are using the versions provided in the above .NET 2.1 Core requirements page as minimum required versions.
 * Why, cuz getting distros, mapping them to the ones listd on .NET 2.1 Core requirements are entirely accurate.
 * Due to the inaccuracy, its easier and safer to just assume futur versions of an OS are also supported.
 * We will need to regularly update the requirements over time, when using .NET Core 2.2 or 3, etc.
 */
export declare class DotNetCompatibilityService implements IDotNetCompatibilityService {
    private readonly platformService;
    private readonly mappedServices;
    constructor(unknownOsService: IOSDotNetCompatibilityService, macService: IOSDotNetCompatibilityService, winService: IOSDotNetCompatibilityService, linuxService: IOSDotNetCompatibilityService, platformService: IPlatformService);
    isSupported(): Promise<boolean>;
}
