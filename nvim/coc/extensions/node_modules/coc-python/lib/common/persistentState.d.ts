import { Memento, IPersistentState, IPersistentStateFactory } from './types';
export declare class PersistentState<T> implements IPersistentState<T> {
    private storage;
    private key;
    private defaultValue?;
    private expiryDurationMs?;
    constructor(storage: Memento, key: string, defaultValue?: T, expiryDurationMs?: number);
    readonly value: T;
    updateValue(newValue: T): Promise<void>;
}
export declare class PersistentStateFactory implements IPersistentStateFactory {
    private globalState;
    private workspaceState;
    constructor(globalState: Memento, workspaceState: Memento);
    createGlobalPersistentState<T>(key: string, defaultValue?: T, expiryDurationMs?: number): IPersistentState<T>;
    createWorkspacePersistentState<T>(key: string, defaultValue?: T, expiryDurationMs?: number): IPersistentState<T>;
}
