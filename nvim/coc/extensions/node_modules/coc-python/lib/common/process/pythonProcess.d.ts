import { IServiceContainer } from '../../ioc/types';
import { ExecutionResult, InterpreterInfomation, IProcessService, IPythonExecutionService, ObservableExecutionResult, SpawnOptions } from './types';
export declare class PythonExecutionService implements IPythonExecutionService {
    private readonly procService;
    private readonly pythonPath;
    private readonly fileSystem;
    constructor(serviceContainer: IServiceContainer, procService: IProcessService, pythonPath: string);
    getInterpreterInformation(): Promise<InterpreterInfomation | undefined>;
    getExecutablePath(): Promise<string>;
    isModuleInstalled(moduleName: string): Promise<boolean>;
    execObservable(args: string[], options: SpawnOptions): ObservableExecutionResult<string>;
    execModuleObservable(moduleName: string, args: string[], options: SpawnOptions): ObservableExecutionResult<string>;
    exec(args: string[], options: SpawnOptions): Promise<ExecutionResult<string>>;
    execModule(moduleName: string, args: string[], options: SpawnOptions): Promise<ExecutionResult<string>>;
}
