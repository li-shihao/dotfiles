import { Terminal } from 'coc.nvim';
import Uri from 'vscode-uri';
import { ICondaService, IInterpreterService, PythonInterpreter } from '../../interpreter/contracts';
import { ITerminalManager, IWorkspaceService } from '../application/types';
import { IPlatformService } from '../platform/types';
import { IConfigurationService, Resource } from '../types';
import { ITerminalActivationCommandProvider, ITerminalHelper, TerminalShellType } from './types';
export declare class TerminalHelper implements ITerminalHelper {
    private readonly platform;
    private readonly terminalManager;
    private readonly workspace;
    private readonly condaService;
    private readonly interpreterService;
    private readonly configurationService;
    private readonly conda;
    private readonly bashCShellFish;
    private readonly commandPromptAndPowerShell;
    private readonly pyenv;
    private readonly pipenv;
    private readonly detectableShells;
    constructor(platform: IPlatformService, terminalManager: ITerminalManager, workspace: IWorkspaceService, condaService: ICondaService, interpreterService: IInterpreterService, configurationService: IConfigurationService, conda: ITerminalActivationCommandProvider, bashCShellFish: ITerminalActivationCommandProvider, commandPromptAndPowerShell: ITerminalActivationCommandProvider, pyenv: ITerminalActivationCommandProvider, pipenv: ITerminalActivationCommandProvider);
    createTerminal(title?: string): Promise<Terminal>;
    identifyTerminalShell(shellPath: string): TerminalShellType;
    getTerminalShellPath(): string;
    buildCommandForTerminal(terminalShellType: TerminalShellType, command: string, args: string[]): string;
    getEnvironmentActivationCommands(terminalShellType: TerminalShellType, resource?: Uri): Promise<string[] | undefined>;
    getEnvironmentActivationShellCommands(resource: Resource, interpreter?: PythonInterpreter): Promise<string[] | undefined>;
    protected getActivationCommands(resource: Resource, interpreter: PythonInterpreter | undefined, terminalShellType: TerminalShellType, providers: ITerminalActivationCommandProvider[]): Promise<string[] | undefined>;
}
