import Uri from 'vscode-uri';
export declare function clearCache(): void;
export declare class InMemoryInterpreterSpecificCache<T> {
    private readonly keyPrefix;
    protected readonly expiryDurationMs: number;
    private readonly resource;
    private readonly args;
    constructor(keyPrefix: string, expiryDurationMs: number, args: [Uri | undefined, ...any[]]);
    readonly hasData: boolean;
    /**
     * Returns undefined if there is no data.
     * Uses `hasData` to determine whether any cached data exists.
     *
     * @type {(T | undefined)}
     * @memberof InMemoryInterpreterSpecificCache
     */
    data: T | undefined;
    clear(): void;
    /**
     * Has this data expired?
     * (protected class member to allow for reliable non-data-time-based testing)
     *
     * @param expiry The date to be tested for expiry.
     * @returns true if the data expired, false otherwise.
     */
    protected hasExpired(expiry: number): boolean;
    /**
     * When should this data item expire?
     * (protected class method to allow for reliable non-data-time-based testing)
     *
     * @returns number representing the expiry time for this item.
     */
    protected calculateExpiry(): number;
}
