import { Event } from 'coc.nvim';
import { CancellationToken, CodeLens, TextDocument } from 'vscode-languageserver-protocol';
import { IWorkspaceService } from '../../common/application/types';
import { IPlatformService } from '../../common/platform/types';
import { IProcessServiceFactory } from '../../common/process/types';
import { IConfigurationService } from '../../common/types';
import { IShebangCodeLensProvider } from '../contracts';
export declare class ShebangCodeLensProvider implements IShebangCodeLensProvider {
    private readonly processServiceFactory;
    private readonly configurationService;
    private readonly platformService;
    readonly onDidChangeCodeLenses: Event<void>;
    constructor(processServiceFactory: IProcessServiceFactory, configurationService: IConfigurationService, platformService: IPlatformService, workspaceService: IWorkspaceService);
    detectShebang(document: TextDocument): Promise<string | undefined>;
    provideCodeLenses(document: TextDocument, _token?: CancellationToken): Promise<CodeLens[]>;
    private getFullyQualifiedPathToInterpreter;
    private createShebangCodeLens;
}
