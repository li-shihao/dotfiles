import { Uri } from 'coc.nvim';
import { IServiceContainer } from '../../../ioc/types';
import { IVirtualEnvironmentsSearchPathProvider, PythonInterpreter } from '../../contracts';
import { CacheableLocatorService } from './cacheableLocatorService';
export declare class BaseVirtualEnvService extends CacheableLocatorService {
    private searchPathsProvider;
    private readonly virtualEnvMgr;
    private readonly helper;
    private readonly fileSystem;
    constructor(searchPathsProvider: IVirtualEnvironmentsSearchPathProvider, serviceContainer: IServiceContainer, name: string, cachePerWorkspace?: boolean);
    dispose(): void;
    protected getInterpretersImplementation(resource?: Uri): Promise<PythonInterpreter[]>;
    private suggestionsFromKnownVenvs;
    private lookForInterpretersInVenvs;
    private getProspectiveDirectoriesForLookup;
    private getVirtualEnvDetails;
}
