import { Uri } from 'coc.nvim';
import { IServiceContainer } from '../../../ioc/types';
import { IVirtualEnvironmentsSearchPathProvider } from '../../contracts';
import { BaseVirtualEnvService } from './baseVirtualEnvService';
export declare class GlobalVirtualEnvService extends BaseVirtualEnvService {
    constructor(globalVirtualEnvPathProvider: IVirtualEnvironmentsSearchPathProvider, serviceContainer: IServiceContainer);
}
export declare class GlobalVirtualEnvironmentsSearchPathProvider implements IVirtualEnvironmentsSearchPathProvider {
    private readonly config;
    private readonly virtualEnvMgr;
    constructor(serviceContainer: IServiceContainer);
    getSearchPaths(resource?: Uri): Promise<string[]>;
}
