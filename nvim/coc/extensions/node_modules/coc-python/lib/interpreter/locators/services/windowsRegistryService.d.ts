import { Uri } from 'coc.nvim';
import { IPlatformService, IRegistry } from '../../../common/platform/types';
import { IServiceContainer } from '../../../ioc/types';
import { PythonInterpreter } from '../../contracts';
import { CacheableLocatorService } from './cacheableLocatorService';
export declare class WindowsRegistryService extends CacheableLocatorService {
    private registry;
    private readonly platform;
    private readonly pathUtils;
    constructor(registry: IRegistry, platform: IPlatformService, serviceContainer: IServiceContainer);
    dispose(): void;
    protected getInterpretersImplementation(_resource?: Uri): Promise<PythonInterpreter[]>;
    private getInterpretersFromRegistry;
    private getCompanies;
    private getInterpretersForCompany;
    private getInreterpreterDetailsForCompany;
    private getCompanyDisplayName;
}
