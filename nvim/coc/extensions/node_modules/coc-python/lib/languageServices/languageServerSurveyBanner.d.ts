import { ILanguageServerFolderService } from '../activation/types';
import { IApplicationShell } from '../common/application/types';
import { IBrowserService, IPersistentStateFactory, IPythonExtensionBanner } from '../common/types';
export declare enum LSSurveyStateKeys {
    ShowBanner = "ShowLSSurveyBanner",
    ShowAttemptCounter = "LSSurveyShowAttempt",
    ShowAfterCompletionCount = "LSSurveyShowCount"
}
export declare class LanguageServerSurveyBanner implements IPythonExtensionBanner {
    private appShell;
    private persistentState;
    private browserService;
    private lsService;
    private disabledInCurrentSession;
    private minCompletionsBeforeShow;
    private maxCompletionsBeforeShow;
    private isInitialized;
    constructor(appShell: IApplicationShell, persistentState: IPersistentStateFactory, browserService: IBrowserService, lsService: ILanguageServerFolderService, showAfterMinimumEventsCount?: number, showBeforeMaximumEventsCount?: number);
    initialize(): void;
    readonly enabled: boolean;
    showBanner(): Promise<void>;
    shouldShowBanner(launchCounter?: number): Promise<boolean>;
    disable(): Promise<void>;
    launchSurvey(): Promise<void>;
    private incrementPythonLanguageServiceLaunchCounter;
    private getPythonLSVersion;
    private getPythonLSLaunchCounter;
    private getPythonLSLaunchThresholdCounter;
}
