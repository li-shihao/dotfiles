"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const coc_nvim_1 = require("coc.nvim");
const types_1 = require("../types");
const baseErrorHandler_1 = require("./baseErrorHandler");
const function_1 = require("../../common/function");
class StandardErrorHandler extends baseErrorHandler_1.BaseErrorHandler {
    constructor(product, outputChannel, serviceContainer) {
        super(product, outputChannel, serviceContainer);
    }
    async handleError(error, resource, execInfo) {
        if (typeof error === 'string' && error.indexOf('OSError: [Errno 2] No such file or directory: \'/') > 0) {
            return this.nextHandler ? this.nextHandler.handleError(error, resource, execInfo) : Promise.resolve(false);
        }
        const linterManager = this.serviceContainer.get(types_1.ILinterManager);
        const info = linterManager.getLinterInfo(execInfo.product);
        this.logger.logError(`There was an error in running the linter ${info.id}`, error);
        this.outputChannel.appendLine(`Linting with ${info.id} failed.`);
        this.outputChannel.appendLine(error.toString());
        this.displayLinterError(info.id)
            .catch(function_1.emptyFn);
        return true;
    }
    async displayLinterError(linterId) {
        const message = `There was an error in running the linter '${linterId}'`;
        coc_nvim_1.workspace.showMessage(message, 'error');
        this.outputChannel.show();
    }
}
exports.StandardErrorHandler = StandardErrorHandler;
//# sourceMappingURL=standard.js.map