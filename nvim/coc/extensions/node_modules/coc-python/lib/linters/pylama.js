"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const coc_nvim_1 = require("coc.nvim");
const types_1 = require("../common/types");
const baseLinter_1 = require("./baseLinter");
const types_2 = require("./types");
const REGEX = '(?<file>.py):(?<line>\\d+):(?<column>\\d+): \\[(?<type>\\w+)\\] (?<code>\\w\\d+):? (?<message>.*)\\r?(\\n|$)';
const COLUMN_OFF_SET = 1;
class PyLama extends baseLinter_1.BaseLinter {
    constructor(outputChannel, serviceContainer) {
        super(types_1.Product.pylama, outputChannel, serviceContainer, COLUMN_OFF_SET);
    }
    async runLinter(document, cancellation) {
        const messages = await this.run(['--format=parsable', coc_nvim_1.Uri.parse(document.uri).fsPath], document, cancellation, REGEX);
        // All messages in pylama are treated as warnings for now.
        messages.forEach(msg => {
            msg.severity = types_2.LintMessageSeverity.Warning;
        });
        return messages;
    }
}
exports.PyLama = PyLama;
//# sourceMappingURL=pylama.js.map