import { Disposable, DocumentFormattingEditProvider, DocumentRangeFormattingEditProvider, ExtensionContext } from 'coc.nvim';
import { CancellationToken } from 'vscode-jsonrpc';
import { FormattingOptions, Range, TextDocument, TextEdit } from 'vscode-languageserver-types';
import { IServiceContainer } from '../ioc/types';
export declare class PythonFormattingEditProvider implements DocumentFormattingEditProvider, DocumentRangeFormattingEditProvider, Disposable {
    private readonly config;
    private readonly documentManager;
    private readonly commands;
    private formatters;
    private disposables;
    private documentVersionBeforeFormatting;
    private formatterMadeChanges;
    private saving;
    constructor(_context: ExtensionContext, serviceContainer: IServiceContainer);
    dispose(): void;
    provideDocumentFormattingEdits(document: TextDocument, options: FormattingOptions, token: CancellationToken): Promise<TextEdit[]>;
    provideDocumentRangeFormattingEdits(document: TextDocument, range: Range | undefined, options: FormattingOptions, token: CancellationToken): Promise<TextEdit[]>;
    private onSaveDocument;
}
