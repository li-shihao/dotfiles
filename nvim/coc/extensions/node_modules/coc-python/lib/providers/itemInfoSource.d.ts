import { Uri } from 'coc.nvim';
import { CancellationToken, MarkupContent, Position, Range, TextDocument } from 'vscode-languageserver-protocol';
import { JediFactory } from '../languageServices/jediProxyFactory';
export declare class LanguageItemInfo {
    tooltip: MarkupContent;
    detail: string;
    signature: string;
    constructor(tooltip: MarkupContent, detail: string, signature: string);
}
export interface IItemInfoSource {
    getItemInfoFromText(documentUri: Uri, fileName: string, range: Range, sourceText: string, token: CancellationToken): Promise<LanguageItemInfo[] | undefined>;
    getItemInfoFromDocument(document: TextDocument, position: Position, token: CancellationToken): Promise<LanguageItemInfo[] | undefined>;
}
export declare class ItemInfoSource implements IItemInfoSource {
    private jediFactory;
    private textConverter;
    constructor(jediFactory: JediFactory);
    getItemInfoFromText(documentUri: Uri, fileName: string, range: Range, sourceText: string, token: CancellationToken): Promise<LanguageItemInfo[] | undefined>;
    getItemInfoFromDocument(document: TextDocument, position: Position, token: CancellationToken): Promise<LanguageItemInfo[] | undefined>;
    private getHoverResultFromDocument;
    private getHoverResultFromDocumentRange;
    private getHoverResultFromTextRange;
    private getItemInfoFromHoverResult;
    private getSignature;
}
