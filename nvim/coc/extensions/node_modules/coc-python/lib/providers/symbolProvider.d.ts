import { CancellationToken, SymbolInformation, TextDocument } from 'vscode-languageserver-protocol';
import { LanguageClient, DocumentSymbolProvider } from 'coc.nvim';
import { IServiceContainer } from '../ioc/types';
import { JediFactory } from '../languageServices/jediProxyFactory';
/**
 * Provides Python symbols to VS Code (from the language server).
 *
 * See:
 *   https://code.visualstudio.com/docs/extensionAPI/vscode-api#DocumentSymbolProvider
 */
export declare class LanguageServerSymbolProvider implements DocumentSymbolProvider {
    private readonly languageClient;
    constructor(languageClient: LanguageClient);
    provideDocumentSymbols(document: TextDocument, token: CancellationToken): Promise<SymbolInformation[]>;
}
/**
 * Provides Python symbols to VS Code (from Jedi).
 *
 * See:
 *   https://code.visualstudio.com/docs/extensionAPI/vscode-api#DocumentSymbolProvider
 */
export declare class JediSymbolProvider implements DocumentSymbolProvider {
    private jediFactory;
    private readonly debounceTimeoutMs;
    private debounceRequest;
    private readonly fs;
    constructor(serviceContainer: IServiceContainer, jediFactory: JediFactory, debounceTimeoutMs?: number);
    provideDocumentSymbols(document: TextDocument, token: CancellationToken): Thenable<SymbolInformation[]>;
    private provideDocumentSymbolsThrottled;
    private parseData;
}
