"use strict";
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
Object.defineProperty(exports, "__esModule", { value: true });
const coc_nvim_1 = require("coc.nvim");
const types_1 = require("../common/application/types");
const constants_1 = require("../common/constants");
const types_2 = require("../common/terminal/types");
class TerminalProvider {
    constructor(serviceContainer) {
        this.serviceContainer = serviceContainer;
        this.disposables = [];
        this.registerCommands();
    }
    dispose() {
        this.disposables.forEach(disposable => disposable.dispose());
    }
    registerCommands() {
        const commandManager = this.serviceContainer.get(types_1.ICommandManager);
        const disposable = commandManager.registerCommand(constants_1.Commands.Create_Terminal, this.onCreateTerminal, this);
        this.disposables.push(disposable);
    }
    async onCreateTerminal() {
        const terminalService = this.serviceContainer.get(types_2.ITerminalServiceFactory);
        const activeResource = this.getActiveResource();
        await terminalService.createTerminalService(activeResource, 'Python').show(false);
    }
    getActiveResource() {
        let doc = coc_nvim_1.workspace.getDocument(coc_nvim_1.workspace.bufnr);
        if (doc && doc.filetype == 'python')
            return coc_nvim_1.Uri.parse(doc.uri);
        return coc_nvim_1.Uri.file(coc_nvim_1.workspace.rootPath);
    }
}
exports.TerminalProvider = TerminalProvider;
//# sourceMappingURL=terminalProvider.js.map