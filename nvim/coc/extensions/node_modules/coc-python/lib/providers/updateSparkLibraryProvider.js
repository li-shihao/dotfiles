'use strict';
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const path_1 = __importDefault(require("path"));
const constants_1 = require("../common/constants");
const coc_nvim_1 = require("coc.nvim");
function activateUpdateSparkLibraryProvider() {
    return coc_nvim_1.commands.registerCommand(constants_1.Commands.Update_SparkLibrary, updateSparkLibrary);
}
exports.activateUpdateSparkLibraryProvider = activateUpdateSparkLibraryProvider;
function updateSparkLibrary() {
    const pythonConfig = coc_nvim_1.workspace.getConfiguration('python', null);
    const extraLibPath = 'autoComplete.extraPaths';
    // tslint:disable-next-line:no-invalid-template-strings
    const sparkHomePath = '${env:SPARK_HOME}';
    pythonConfig.update(extraLibPath, [path_1.default.join(sparkHomePath, 'python'), path_1.default.join(sparkHomePath, 'python/pyspark')], true);
    coc_nvim_1.workspace.showMessage('Make sure you have SPARK_HOME environment variable set to the root path of the local spark installation!', 'more');
    // sendTelemetryEvent(EventName.UPDATE_PYSPARK_LIBRARY)
}
//# sourceMappingURL=updateSparkLibraryProvider.js.map