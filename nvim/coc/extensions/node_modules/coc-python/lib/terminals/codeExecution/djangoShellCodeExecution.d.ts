import { Disposable, Uri } from 'coc.nvim';
import { ICommandManager, IDocumentManager, IWorkspaceService } from '../../common/application/types';
import { IFileSystem, IPlatformService } from '../../common/platform/types';
import { ITerminalServiceFactory } from '../../common/terminal/types';
import { IConfigurationService } from '../../common/types';
import { TerminalCodeExecutionProvider } from './terminalCodeExecution';
export declare class DjangoShellCodeExecutionProvider extends TerminalCodeExecutionProvider {
    constructor(terminalServiceFactory: ITerminalServiceFactory, configurationService: IConfigurationService, workspace: IWorkspaceService, documentManager: IDocumentManager, platformService: IPlatformService, commandManager: ICommandManager, fileSystem: IFileSystem, disposableRegistry: Disposable[]);
    getReplCommandArgs(resource?: Uri): {
        command: string;
        args: string[];
    };
}
