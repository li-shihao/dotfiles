import { Event, Uri } from 'coc.nvim';
import { IDisposable } from '../common/types';
export declare const ICodeExecutionService: unique symbol;
export interface ICodeExecutionService {
    execute(code: string, resource?: Uri): Promise<void>;
    executeFile(file: Uri): Promise<void>;
    initializeRepl(resource?: Uri): Promise<void>;
}
export declare const ICodeExecutionHelper: unique symbol;
export interface ICodeExecutionHelper {
    normalizeLines(code: string): Promise<string>;
    getFileToExecute(): Promise<Uri | undefined>;
    getSelectedTextToExecute(mode: string): Promise<string | undefined>;
}
export declare const ICodeExecutionManager: unique symbol;
export interface ICodeExecutionManager {
    onExecutedCode: Event<string>;
    registerCommands(): void;
}
export declare const ITerminalAutoActivation: unique symbol;
export interface ITerminalAutoActivation extends IDisposable {
    register(): void;
}
