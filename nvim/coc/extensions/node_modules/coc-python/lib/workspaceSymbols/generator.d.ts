import { Disposable, OutputChannel, Uri } from 'coc.nvim';
import { IApplicationShell } from '../common/application/types';
import { IFileSystem } from '../common/platform/types';
import { IProcessServiceFactory } from '../common/process/types';
import { IConfigurationService } from '../common/types';
export declare class Generator implements Disposable {
    readonly workspaceFolder: Uri;
    private readonly output;
    private readonly appShell;
    private readonly fs;
    private readonly processServiceFactory;
    private optionsFile;
    private disposables;
    private pythonSettings;
    readonly tagFilePath: string;
    readonly enabled: boolean;
    constructor(workspaceFolder: Uri, output: OutputChannel, appShell: IApplicationShell, fs: IFileSystem, processServiceFactory: IProcessServiceFactory, configurationService: IConfigurationService);
    dispose(): void;
    generateWorkspaceTags(): Promise<void>;
    private buildCmdArgs;
    private generateTags;
}
