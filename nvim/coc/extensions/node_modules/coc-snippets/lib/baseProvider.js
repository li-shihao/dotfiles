"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const coc_nvim_1 = require("coc.nvim");
const util_1 = require("./util");
class BaseProvider {
    constructor(config) {
        this.config = config;
    }
    async checkContext(_context) {
        return true;
    }
    getExtendsFiletypes(filetype, exists = new Set()) {
        if (exists.has(filetype))
            return [];
        let extend = this.config.extends ? this.config.extends[filetype] : null;
        exists.add(filetype);
        if (!extend || extend.length == 0)
            return [];
        return extend.reduce((arr, curr) => {
            return arr.concat([curr], this.getExtendsFiletypes(curr, exists));
        }, []);
    }
    getFiletypes(filetype) {
        let filetypes = [filetype];
        if (filetype.indexOf('.') !== -1) {
            filetypes.push(...filetype.split('.'));
        }
        if (filetype == 'javascript.jsx')
            filetypes.push('javascriptreact');
        if (filetype == 'typescript.jsx' || filetype == 'typescript.tsx')
            filetypes.push('typescriptreact');
        let map = coc_nvim_1.workspace.env.filetypeMap;
        if (map && map[filetype]) {
            filetypes.push(map[filetype]);
        }
        let extendFiletypes = filetypes.reduce((arr, curr) => {
            return arr.concat(this.getExtendsFiletypes(curr));
        }, []);
        filetypes.push(...extendFiletypes);
        filetypes.reverse();
        return util_1.distinct(filetypes);
    }
}
exports.default = BaseProvider;
//# sourceMappingURL=baseProvider.js.map